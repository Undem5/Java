########" tâche simples #########

public static void main(String[] args) throws InterruptedException {
		Tache t1 = new Tache(1);
		Tache t2 = new Tache(2);
		Tache t3 = new Tache(3);
		Tache t4 = new Tache(4);
		Tache t5 = new Tache(5);
		Tache t6 = new Tache(6);
		
		Tache[] wait1 = new Tache[1];
		Tache[] wait23 = new Tache[2];
		Tache[] wait45 = new Tache[2];

		wait1[0] = t1;
		wait23[0] = t2;
		wait23[1] = t3;
		wait45[1] = t4;
		wait45[0] = t5;

		t1.setWait(null);
		t2.setWait(wait1);
		t3.setWait(wait1);
		t4.setWait(wait1);
		t5.setWait(wait23);
		t6.setWait(wait45);

		t1.start();
		t2.start();
		t3.start();
		t4.start();
		t5.start();
		t6.start();
		
		t6.join();
		System.out.println("FINI !");
	}

public class Tache extends Thread {
	Tache[] t;
	int n;
	
	public Tache(Tache[] t, int n) {
		this.t = t;
		this.n = n;
	}
	
	public Tache(int n) {
		this.n = n;
	}
	
	public void setWait(Tache[] t) {
		this.t = t;
	}
	
	public void run() {
		try {
			if(t != null) {
				for(Tache tache : t) {
					tache.join();
				}
			}
			System.out.println(n+" debut");
			sleep((long)(Math.random()*5000));
			System.out.println(n+" fin");
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}

###########" Tâches complexes ##################

pareil <3
